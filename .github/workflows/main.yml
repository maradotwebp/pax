name: main

on:
  push:
    tags:
      - 'v*'

env:
  APP_NAME: 'pax'
  NIM_VERSION: '1.6.4'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Nim
        uses: jiro4989/setup-nim-action@v1
        with:
          nim-version: ${{ env.NIM_VERSION }}
      - name: Install
        run: nimble install -y
      - name: Test
        run: nimble test

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    needs: [test]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Nim
        uses: jiro4989/setup-nim-action@v1
        with:
          nim-version: ${{ env.NIM_VERSION }}
      - name: Build
        run: nimble build -d:release -y
      - name: Rename macOS binary
        if: matrix.os == 'macos-latest'
        run: mv ${{ env.APP_NAME }} ${{ env.APP_NAME }}-macos
      - name: Store artifacts
        uses: actions/upload-artifact@v2
        with:
          name: binary-${{ matrix.os }}
          path: |
            ${{ env.APP_NAME }}
            ${{ env.APP_NAME }}.exe
            ${{ env.APP_NAME }}-macos

  dll:
    runs-on: ubuntu-latest
    steps:
      - name: Download DLLs
        uses: wei/curl@master
        with:
          args: https://nim-lang.org/download/dlls.zip --output dlls.zip
      - name: Unzip
        uses: montudor/action-zip@v1
        with:
          args: unzip -qq dlls.zip
      - name: Store DLLs artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dlls
          path: |
            cacert.pem
            libcrypto-1_1.dll
            libcrypto-1_1-x64.dll
            libssl-1_1.dll
            libssl-1_1-x64.dll

  package-windows:
    runs-on: ubuntu-latest
    needs: [build, dll]
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v2
        with:
          name: binary-windows-latest
      - name: Download DLLs artifacts
        uses: actions/download-artifact@v2
        with:
          name: dlls
      - name: Zip binary + dlls
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r ${{ env.APP_NAME }}-windows.zip .
      - name: Store windows zip artifact
        uses: actions/upload-artifact@v2
        with:
          name: package-windows-latest
          path: ${{ env.APP_NAME }}-windows.zip

  changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v1.0.0
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Write changelog to file
        run: echo '${{ steps.changelog.outputs.changelog }}' > changelog.txt
      - name: Store changelog
        uses: actions/upload-artifact@v2
        with:
          name: changelog
          path: changelog.txt

  release:
    runs-on: ubuntu-latest
    needs: [build, changelog, package-windows]
    steps:
      - name: Download Windows package artifact
        uses: actions/download-artifact@v2
        with:
          name: package-windows-latest
      - name: Download Linux binary artifact
        uses: actions/download-artifact@v2
        with:
          name: binary-ubuntu-latest
      - name: Download macOS binary artifact
        uses: actions/download-artifact@v2
        with:
          name: binary-macos-latest
      - name: Download changelog
        uses: actions/download-artifact@v2
        with:
          name: changelog
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: changelog.txt
          files: |
            ${{ env.APP_NAME }}
            ${{ env.APP_NAME }}-windows.zip
            ${{ env.APP_NAME }}-macos
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
